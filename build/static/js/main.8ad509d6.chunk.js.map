{"version":3,"sources":["services/UserMediaService.js","services/FileService.js","components/AudioSourceList.js","components/VideoSourceList.js","components/AudioVisualization.js","components/TimeCounter.js","components/SaveFilepath.js","App.js","serviceWorker.js","index.js","services/RecorderService.js"],"names":["UserMediaService","getVideo","_getVideo","Object","asyncToGenerator","regenerator_default","a","mark","_callee","source","wrap","_context","prev","next","abrupt","navigator","mediaDevices","getUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","minWidth","maxWidth","minHeight","maxHeight","then","handleStream","catch","handleUserMediaError","stop","_x","apply","this","arguments","getAudio","_getAudio","_callee2","_args2","_context2","length","undefined","deviceId","_handleStream","_callee3","stream","_context3","_x2","_handleUserMediaError","_callee4","error","_context4","Error","_x3","fs","require","window","FileService","save","buffer","path","name","Promise","resolve","reject","filename","concat","writeFile","err","console","log","AudioSourceList","state","audioSources","selectedSource","_handleChange","event","_this","find","item","target","value","selectSource","setState","localStorage","setItem","props","onSelect","getSources","enumerateDevices","sources","filter","kind","_this2","_loadFromStorage","sourceId","getItem","react_default","createElement","onChange","className","map","key","label","Component","defaultProps","desktopCapturer","VideoSourceList","screenSources","windowSources","_this$state","toConsumableArray","types","includes","_this$state2","AudioVisualization","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isDrawActive","toggleDrawActive","_ref","draw","canvas","React","createRef","canDraw","audioDevice","start","canvasCtx","current","getContext","startAudio","startCanvas","clearCanvas","audioStream","audioCtx","AudioContext","webkitAudioContext","analyser","createAnalyser","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","width","height","clearRect","getByteFrequencyData","numElements","Math","floor","maxNumber","max","arrayList","i","number","average","slice","push","trunc","numbers","reduce","previous","requestAnimationFrame","bind","barHeight","barWidth","x","fillStyle","fillRect","canvasStyle","backgroundColor","style","onClick","ref","TimeCounter","totalSeconds","timer","setInterval","increment","clearInterval","hours","minutes","seconds","_this$getTime","getTime","numberFormat","remote","SaveFilepath","folder","hasTime","format","selectFolder","dialog","showOpenDialog","properties","handleChange","type","checked","defineProperty","formatList","placeholder","readOnly","ipcRenderer","App","isRecording","isPaused","canRecordSystemAudio","videoTarget","audioTarget","systemAudioTarget","isLoading","onVideoSourceSelect","srcObject","muted","onloadedmetadata","e","play","videoSourceList","onAudioSourceSelect","_ref2","audioSourceList","onRecordSystemAudioChange","_ref3","currentTarget","sent","savefilepath","audioTracks","showMessageBox","message","getAudioTracks","addTrack","RecorderService","timeCounter","send","pause","_callee5","_context5","resume","_callee6","_this$state3","_context6","_callee7","_context7","reset","saveFile","_ref8","_callee8","fileName","_context8","Date","now","toString","_x4","deleteRecording","_callee9","_context9","cancelRecording","_callee10","options","_context10","buttons","defaultId","title","detail","response","handleShortcuts","on","_this3","_this3$state","_this$state4","Fragment","_this$state5","appClassName","components_AudioVisualization","components_VideoSourceList","components_AudioSourceList","display","disabled","components_TimeCounter","isActive","controlButtons","components_SaveFilepath","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","recorder","blobs","MediaRecorder","ondataavailable","data","_stop","E_Users_felip_Desktop_memoplay_screen_recorder_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Users_felip_Desktop_memoplay_screen_recorder_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","onstop","toArrayBuffer","Blob","arrayBuffer","toBuffer","blob","callback","fileReader","FileReader","onload","result","readAsArrayBuffer","Buffer","byteLength","arr"],"mappings":"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","file":"static/js/main.8ad509d6.chunk.js","sourcesContent":["export const UserMediaService = {\r\n    async getVideo(source){\r\n        return navigator.mediaDevices.getUserMedia({\r\n            audio: false,\r\n            video: { \r\n              mandatory: {\r\n                chromeMediaSource: 'desktop',\r\n                chromeMediaSourceId: source.id,\r\n                minWidth: 1280,\r\n                maxWidth: 1920,\r\n                minHeight: 720,\r\n                maxHeight: 1080,\r\n              }\r\n            }\r\n          })\r\n          .then(UserMediaService.handleStream)\r\n          .catch(UserMediaService.handleUserMediaError)\r\n    },\r\n    async getAudio(source = null){\r\n      let audio = true;\r\n      if(source){\r\n        audio = {\r\n          deviceId: source.deviceId\r\n        };\r\n      }\r\n      return navigator.mediaDevices.getUserMedia({\r\n          audio,\r\n          video: false\r\n        })\r\n        .then(UserMediaService.handleStream)\r\n        .catch(UserMediaService.handleUserMediaError)\r\n    },\r\n    async handleStream(stream){\r\n      return stream;\r\n    },\r\n    async handleUserMediaError(error){\r\n      throw Error(error);\r\n    }\r\n};\r\n\r\n","const require = window.require,\r\n    fs = require('fs');\r\n\r\nexport const FileService = {\r\n    save(buffer, path, name){\r\n        return new Promise((resolve, reject) => {\r\n            const filename = `${path}/${name}`;\r\n            fs.writeFile(filename, buffer, (err) => {\r\n                if(err){\r\n                    reject(err);\r\n                }else{\r\n                    resolve(filename);\r\n                    console.log(filename)\r\n                }\r\n            })\r\n        })\r\n    }\r\n};","import React, {Component} from 'react';\r\n\r\nclass AudioSourceList extends Component{\r\n\r\n    static defaultProps = {\r\n        onSelect: () => {}\r\n    }\r\n\r\n    state = {\r\n        audioSources: [],\r\n        selectedSource: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSources();\r\n    }\r\n\r\n    async getSources(){\r\n        const sources = await navigator.mediaDevices.enumerateDevices(),\r\n            audioSources = sources.filter(item => item.kind === 'audioinput');\r\n        this.setState({\r\n            audioSources\r\n        }, () => {\r\n            this._loadFromStorage();\r\n        });\r\n        return audioSources;\r\n    }\r\n\r\n    _handleChange = (event) => {\r\n        const selectedSource = this.state.audioSources.find(item => item.deviceId === event.target.value);\r\n        this.selectSource(selectedSource);\r\n    }\r\n\r\n    _loadFromStorage(){\r\n        const sourceId = localStorage.getItem('_audio_source'),\r\n            selectedSource = this.state.audioSources.find(item => item.deviceId === sourceId);\r\n        if(selectedSource){\r\n            this.selectSource(selectedSource);\r\n        }else{\r\n            this.selectSource(this.state.audioSources[0]);\r\n        }\r\n    }\r\n\r\n    selectSource = (selectedSource) => {\r\n        if(selectedSource){\r\n            this.setState({selectedSource});\r\n            localStorage.setItem('_audio_source', selectedSource.deviceId);\r\n            this.props.onSelect(selectedSource);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {state} = this;\r\n        return (\r\n            <div>\r\n                <div>Audio input source</div>\r\n                <select value={state.selectedSource.deviceId} onChange={this._handleChange} className=\"settings-select\" >\r\n                    {\r\n                        state.audioSources.map(item => <option key={item.deviceId} value={item.deviceId} >{item.label}</option>)\r\n                    }\r\n                </select>\r\n                {/*\r\n                <ul>\r\n                    {\r\n                        state.audioSources.map(item => <AudioSourceListItem key={item.deviceId} selectedSource={state.selectedSource} onSelect={this.onSourceSelect} item={item} />)\r\n                    }\r\n                </ul>\r\n                */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction AudioSourceListItem(props){\r\n    const { item, selectedSource } = props,\r\n        cutIndex = item.label.lastIndexOf('('), \r\n        label = item.label.substr(0, cutIndex).trim();\r\n    let classes = '';\r\n\r\n    if(selectedSource && item.deviceId === selectedSource.deviceId){\r\n        classes += 'is-selected';\r\n    }\r\n\r\n    return (\r\n        <li onClick={() => props.onSelect(item)} className={classes} >\r\n            <div>{label}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default AudioSourceList;","import React, {Component} from 'react';\r\n\r\nconst require = window.require;\r\nconst { desktopCapturer } = require('electron');\r\n\r\nclass VideoSourceList extends Component{\r\n\r\n    static defaultProps = {\r\n        onSelect: () => {}\r\n    }\r\n\r\n    state = {\r\n        screenSources: [],\r\n        windowSources: [],\r\n        selectedSource: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSources();\r\n    }\r\n\r\n    getSources(){\r\n        desktopCapturer.getSources({ types: ['window', 'screen'] }, (error, sources) => {\r\n            const windowSources = sources.filter(item => item.id.includes('window')),\r\n                screenSources = sources.filter(item => item.id.includes('screen'));\r\n\r\n            this.setState({\r\n                windowSources,\r\n                screenSources\r\n            }, () => {\r\n                this._loadFromStorage();\r\n            });\r\n        })\r\n    }\r\n\r\n    _handleChange = (event) => {\r\n        const {screenSources, windowSources} = this.state,\r\n            selectedSource = [...screenSources, ...windowSources].find(item => item.id === event.target.value);\r\n        this.selectSource(selectedSource);\r\n    }\r\n\r\n    _loadFromStorage(){\r\n        const {screenSources, windowSources} = this.state,\r\n            sourceId = localStorage.getItem('_video_source'),\r\n            selectedSource = [...screenSources, ...windowSources].find(item => item.id === sourceId);\r\n        if(selectedSource){\r\n            this.selectSource(selectedSource);\r\n        }else{\r\n            this.selectSource(screenSources[0]);\r\n        }\r\n    }\r\n\r\n    selectSource = (selectedSource) => {\r\n        if(selectedSource){\r\n            this.setState({selectedSource});\r\n            localStorage.setItem('_video_source', selectedSource.id);\r\n            this.props.onSelect(selectedSource);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {state} = this;\r\n        return (\r\n            <div>\r\n                <div>Video input  source</div>\r\n                <select value={state.selectedSource.id} onChange={(this._handleChange)} className=\"settings-select\" >\r\n                    <option>-- SCREENS --</option>\r\n                    {\r\n                        state.screenSources.map(item => <option key={item.id} value={item.id} >{item.name}</option>)\r\n                    }\r\n                    <option>-- WINDOWS --</option>\r\n                    {\r\n                        state.windowSources.map(item => <option key={item.id} value={item.id} >{item.name}</option>)\r\n                    }\r\n                </select>\r\n                {/*\r\n                <ul>\r\n                    {\r\n                        state.screenSources.map(item => <VideoSourceListItem key={item.id} selectedSource={state.selectedSource} onSelect={this.onSourceSelect} item={item} />)\r\n                    }\r\n                </ul>\r\n                \r\n                <hr />\r\n\r\n                {!state.selectedSource ? '' : <img src={state.selectedSource.thumbnail.toDataURL()} />}\r\n                <div>Windows</div>\r\n                <ul>\r\n                    {\r\n                        state.windowSources.map(item => <VideoSourceListItem key={item.id} selectedSource={state.selectedSource} onSelect={this.onSourceSelect} item={item} />)\r\n                    }\r\n                </ul>\r\n                \r\n                */}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction VideoSourceListItem(props){\r\n    const { item, selectedSource } = props;\r\n    let classes = '';\r\n\r\n    if(selectedSource && item.id === selectedSource.id){\r\n        classes += 'is-selected';\r\n    }\r\n    return (\r\n        <li onClick={() => props.onSelect(item)} className={classes} >\r\n            <img src={item.thumbnail.toDataURL()} />\r\n            <div>{item.name}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default VideoSourceList;","import React, { Component } from 'react';\r\n\r\nimport { UserMediaService } from './../services/UserMediaService';\r\n\r\nclass AudioVisualization extends Component{\r\n    static defaultProps = {\r\n        audioDevice: null\r\n    }\r\n\r\n    state = {\r\n        isDrawActive: true\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.canvas = React.createRef();\r\n        this.canDraw = false;\r\n        //this.audioMini = React.createRef();\r\n    }\r\n\r\n    async componentDidUpdate(){\r\n        if(this.props.audioDevice){\r\n            this.start();\r\n        }else{\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.canvasCtx = this.canvas.current.getContext('2d');\r\n        if(this.props.audioDevice){\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    toggleDrawActive = () => {\r\n        this.setState(({isDrawActive}) => {\r\n            return {isDrawActive: !isDrawActive};\r\n        }, () => {\r\n            this.draw();\r\n        })\r\n    }\r\n \r\n    start(){\r\n        this.startAudio();\r\n        this.startCanvas();\r\n        this.canDraw = true;\r\n        this.draw();\r\n\r\n        //this.getBarValues();\r\n    }\r\n\r\n    stop(){\r\n        this.canDraw = false;\r\n        this.clearCanvas();\r\n    }\r\n\r\n    async startAudio(){\r\n        if(this.props.audioDevice){\r\n            this.audioStream = await UserMediaService.getAudio(this.props.audioDevice);\r\n            const audioCtx = new (window.AudioContext || window.webkitAudioContext)(),\r\n            analyser = audioCtx.createAnalyser(),\r\n            source = audioCtx.createMediaStreamSource(this.audioStream);\r\n        \r\n            source.connect(analyser);\r\n\r\n            analyser.fftSize = 256;\r\n            this.analyser = analyser;\r\n            this.bufferLength = analyser.frequencyBinCount;\r\n            this.dataArray = new Uint8Array(this.bufferLength);\r\n        }\r\n    }\r\n\r\n    startCanvas(){\r\n        const canvas = this.canvas.current;\r\n        canvas.width = this.props.width || 100;\r\n        canvas.height = this.props.height || 100;\r\n    }\r\n\r\n    \r\n    clearCanvas(){\r\n        const canvas = this.canvas.current,\r\n            {width, height} = canvas;\r\n        this.canvasCtx.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    getBarValues(){\r\n        const {bufferLength, dataArray, analyser} = this;\r\n\r\n        //requestAnimationFrame(this.getBarValues.bind(this));\r\n        //setTimeout(this.getBarValues.bind(this), 1000/10)\r\n\r\n        if(!this.audioStream){\r\n            return false;\r\n        }\r\n        analyser.getByteFrequencyData(dataArray);\r\n\r\n        const numArrays = 3,\r\n            numElements = Math.floor(bufferLength / numArrays),\r\n            maxNumber = Math.max(...dataArray),\r\n            arrayList = [];\r\n\r\n        for(let i = 0; i < numArrays; i++){\r\n            const number = this.average(dataArray.slice(0, numElements));\r\n            arrayList.push( Math.trunc(((number / maxNumber) || 0 ) * 10) + '0' )  ;\r\n        }\r\n    }\r\n\r\n    average(numbers){\r\n        const length = numbers.length,\r\n            values = numbers.reduce((previous, current) => current += previous);\r\n        return values/length;\r\n    }\r\n\r\n    draw() {\r\n        if(this.canDraw && this.state.isDrawActive){\r\n            const canvas = this.canvas.current,\r\n                {width, height} = canvas,\r\n                {canvasCtx, bufferLength, dataArray, analyser} = this;\r\n            \r\n            this.clearCanvas();\r\n\r\n            requestAnimationFrame(this.draw.bind(this));\r\n            //setTimeout(this.draw.bind(this), 1000/10)\r\n\r\n\r\n            if(!this.audioStream){\r\n                return false;\r\n            }\r\n\r\n    \r\n            analyser.getByteFrequencyData(dataArray);\r\n    \r\n            /*canvasCtx.fillStyle = 'rgb(0, 0, 0)';\r\n            canvasCtx.fillRect(0, 0, width, height);*/\r\n\r\n            const barWidth = (width / bufferLength) * 2.5;\r\n            let barHeight,\r\n            x = 0;\r\n\r\n\r\n            for(let i = 0; i < bufferLength; i++) {\r\n                barHeight = dataArray[i]/2;\r\n        \r\n                canvasCtx.fillStyle = 'rgb(50, ' + (barHeight + 100) + ',50)';\r\n                canvasCtx.fillRect(x, height - barHeight / 2, barWidth, barHeight);\r\n        \r\n                x += barWidth + 1;\r\n            }\r\n            \r\n\r\n           /*const barWidth = width;\r\n           let barHeight;\r\n\r\n           for(let i = 0; i < bufferLength; i++) {\r\n                barHeight = dataArray[i]/2;\r\n\r\n                var grad1 = canvasCtx.createLinearGradient(0, height * .2, 0, height);\r\n                grad1.addColorStop(0.2, '#f15a47'); //red\r\n                grad1.addColorStop(0.5, '#f2ee47'); // yellow\r\n                grad1.addColorStop(1, '#389f47'); // green\r\n\r\n                canvasCtx.fillStyle = grad1;\r\n       \r\n                //canvasCtx.fillStyle = 'rgb(50, ' + (barHeight + 100) + ',50)';\r\n                canvasCtx.fillRect(0, height - barHeight / 2, barWidth, barHeight);\r\n           }*/\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        const {state} = this,\r\n            canvasStyle = state.isDrawActive ? {} : {backgroundColor: '#333'};\r\n\r\n        return (\r\n            <div>\r\n                {/* <AudioVisualizationMini ref={this.audioMini} /> */}\r\n                <canvas style={canvasStyle} onClick={this.toggleDrawActive} ref={this.canvas} height={50} width={100} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AudioVisualizationMini extends Component{\r\n    state = {\r\n        bar1: 0,\r\n        bar2: 0,\r\n        bar3: 0\r\n    }\r\n\r\n    render(){\r\n        const {bar1, bar2, bar3} = this.state,\r\n            a = `bar-height-${bar1}`,\r\n            b = `bar-height-${bar2}`,\r\n            c = `bar-height-${bar3}`;\r\n        return (\r\n            <div className=\"audio-visualization-mini\" >\r\n                <div className=\"audio-visualization-bar-container\" >\r\n                    <div className={\"audio-bar \" + a} ></div>\r\n                    <div className={\"audio-bar \" + b} ></div>\r\n                    <div className={\"audio-bar \" + c} ></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default AudioVisualization;","import React, { Component } from 'react';\r\n\r\nclass TimeCounter extends Component{\r\n    state = {\r\n        totalSeconds: 0\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.timer = null;\r\n    }\r\n\r\n    start(){\r\n        this.timer = setInterval(() => this.increment(), 1000);\r\n    }\r\n\r\n    stop(){\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            totalSeconds: 0\r\n        });\r\n    }\r\n\r\n    increment(){\r\n        this.setState(({totalSeconds}) => ({totalSeconds: totalSeconds + 1}));\r\n    }\r\n\r\n    numberFormat(number){\r\n        return ('00' + number).slice(-2);\r\n    }\r\n\r\n    getTime(){\r\n        const {totalSeconds} = this.state;\r\n\r\n        const hours = Math.floor(totalSeconds /3600),\r\n            minutes = Math.floor((totalSeconds - hours*3600)/60),\r\n            seconds = totalSeconds - (hours*3600 + minutes*60);\r\n\r\n        return {seconds, minutes, hours};\r\n    }\r\n\r\n    render(){\r\n        const {seconds, minutes, hours} = this.getTime();\r\n        return (\r\n            <div className=\"time-counter\" >\r\n                <span>{hours}:{this.numberFormat(minutes)}:{this.numberFormat(seconds)}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimeCounter;","import React, { Component } from 'react';\r\n\r\nconst require = window.require;\r\nconst { remote } = require('electron');\r\n\r\nclass SaveFilepath extends Component{\r\n    state = {\r\n        folder: '',\r\n        filename: '',\r\n        hasTime: false,\r\n        format: ''\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.formatList = ['mp4', 'avi'];\r\n    }\r\n\r\n    componentDidMount(){\r\n        const folder = localStorage.getItem('_filepath_folder') || '',\r\n            format = localStorage.getItem('_filepath_format') || 'webm',\r\n            hasTime = localStorage.getItem('_filepath_hasTime') === 'true';\r\n        this.setState({\r\n            folder,\r\n            format,\r\n            hasTime\r\n        })\r\n    }\r\n\r\n    selectFolder = async () => {\r\n        const folder = remote.dialog.showOpenDialog({ properties: ['openDirectory'] });\r\n        if(folder){\r\n            this.setState({folder: folder[0]});\r\n            localStorage.setItem(`_filepath_folder`, folder[0]);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { target } = event,\r\n            {name} = target,\r\n            value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        localStorage.setItem(`_filepath_${name}`, value);\r\n    }\r\n\r\n    render(){\r\n        const {folder, filename, format, hasTime} = this.state;\r\n        return(\r\n            <div className=\"save-file-path\" >\r\n                <input name=\"folder\" type=\"text\" onClick={this.selectFolder} value={folder} placeholder=\"folder\" readOnly />\r\n                <input name=\"filename\" type=\"text\" onChange={this.handleChange} value={filename} placeholder=\"file name\" />\r\n                <select name=\"format\" onChange={this.handleChange} value={format} >\r\n                    <option value=\"webm\" >webm (default)</option>\r\n                    {\r\n                        this.formatList.map(format => <option key={format} value={format} >{format}</option>)\r\n                    }\r\n                </select>\r\n                <label>\r\n                    <input name=\"hasTime\" type=\"checkbox\" onChange={this.handleChange} checked={hasTime} />\r\n                    Time\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SaveFilepath;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { UserMediaService } from './services/UserMediaService';\r\nimport { RecorderService } from './services/RecorderService';\r\nimport { FileService } from './services/FileService';\r\n\r\nimport AudioSourceList from './components/AudioSourceList';\r\nimport VideoSourceList from './components/VideoSourceList';\r\nimport AudioVisualization from './components/AudioVisualization';\r\nimport TimeCounter from './components/TimeCounter';\r\nimport SaveFilepath from './components/SaveFilepath';\r\n\r\nconst require = window.require;\r\nconst { ipcRenderer, remote } = require('electron');\r\n// https://zhirzh.github.io/2017/09/02/mediarecorder/\r\n\r\nclass App extends Component { \r\n\r\n  state = {\r\n    isRecording: false,\r\n    isPaused: false,\r\n    canRecordSystemAudio: false,\r\n    videoTarget: null,\r\n    audioTarget: null,\r\n    systemAudioTarget: null,\r\n    isLoading: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.video = React.createRef();\r\n    this.timeCounter = React.createRef();\r\n    this.savefilepath = React.createRef();\r\n    this.videoSourceList = React.createRef();\r\n    this.audioSourceList = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.handleShortcuts();\r\n\r\n    ipcRenderer.on('back:convert-video:complete', () => {\r\n      this.setState({isLoading: false});\r\n    })\r\n  }\r\n\r\n  handleShortcuts(){\r\n    ipcRenderer.on('play', ()=> {\r\n      const {isRecording, isPaused} = this.state;\r\n      if(!isRecording && !isPaused){\r\n        this.start();\r\n      }else if(isRecording && !isPaused){\r\n        this.pause();\r\n      }else{\r\n        this.resume();\r\n      }\r\n    });\r\n    ipcRenderer.on('stop', ()=> {\r\n      this.stop();\r\n    });\r\n    ipcRenderer.on('delete', ()=> {\r\n      this.cancelRecording();\r\n    });\r\n  }\r\n\r\n  onVideoSourceSelect = async (source) => {\r\n    this.setState({videoTarget: source});\r\n    const video = this.video.current;\r\n\r\n    UserMediaService.getVideo(source)\r\n      .then(stream => {\r\n        console.log(source, stream)\r\n        video.srcObject = stream;\r\n        video.muted = true;\r\n        video.onloadedmetadata = (e) => video.play();\r\n      })\r\n      .catch(() => {\r\n        const videoSourceList = this.videoSourceList.current;\r\n        videoSourceList.selectSource(videoSourceList.state.screenSources[0]);\r\n      })\r\n  }\r\n\r\n  onAudioSourceSelect = async (source) => {\r\n    this.setState({audioTarget: source});\r\n\r\n    UserMediaService.getAudio(source)\r\n      .then(stream => {\r\n        console.log(source, stream)\r\n      })\r\n      .catch(() => {\r\n        const audioSourceList = this.audioSourceList.current;\r\n        audioSourceList.selectSource(audioSourceList.state.audioSources[0]);\r\n      })\r\n  }\r\n\r\n  onRecordSystemAudioChange = async (event) => {\r\n    const canRecordSystemAudio = event.currentTarget.checked;\r\n    let systemAudioTarget = false;\r\n    if(canRecordSystemAudio){\r\n      systemAudioTarget = await UserMediaService.getAudio();\r\n    }\r\n    this.setState({canRecordSystemAudio, systemAudioTarget});\r\n  }\r\n\r\n  start = async () => {\r\n    const savefilepath = this.savefilepath.current;\r\n    if(this.state.isLoading){\r\n      return false;\r\n    }\r\n    if(!savefilepath.state.folder){\r\n      remote.dialog.showMessageBox({\r\n        message: 'Select a folder to save the file'\r\n      });\r\n      this.savefilepath.current.selectFolder();\r\n      return false;\r\n    }\r\n\r\n    const {videoTarget, audioTarget, isRecording, canRecordSystemAudio, systemAudioTarget} = this.state,\r\n      stream = this.video.current.srcObject;\r\n    if(videoTarget && !isRecording){\r\n      if(audioTarget){\r\n        const audioStream = await UserMediaService.getAudio(audioTarget),\r\n          audioTracks = audioStream.getAudioTracks();\r\n        stream.addTrack(audioTracks[0]);\r\n      }\r\n      RecorderService.start(stream);\r\n      this.setState({isRecording: true, isPaused: false});\r\n      this.timeCounter.current.start();\r\n      ipcRenderer.send('win:start');\r\n    }\r\n  }\r\n\r\n  pause = async () => {\r\n    const {isRecording, isPaused} = this.state;\r\n    if(isRecording && !isPaused){\r\n      RecorderService.pause();\r\n      this.setState({isRecording: true, isPaused: true});\r\n      this.timeCounter.current.stop();\r\n      ipcRenderer.send('win:pause');\r\n    }\r\n  }\r\n\r\n  resume = async () => {\r\n    const {isRecording, isPaused} = this.state;\r\n    if(isRecording && isPaused){\r\n      RecorderService.resume();\r\n      this.setState({isRecording: true, isPaused: false});\r\n      this.timeCounter.current.start();\r\n      ipcRenderer.send('win:resume');\r\n    }\r\n  }\r\n\r\n  stop = async () => {\r\n    const {isRecording} = this.state;\r\n    if(isRecording){\r\n      const buffer = await RecorderService.stop();\r\n      this.setState({isRecording: false, isPaused: false});\r\n      this.timeCounter.current.stop();\r\n      this.timeCounter.current.reset();\r\n      ipcRenderer.send('win:stop');\r\n      return this.saveFile(buffer);\r\n    }\r\n  }\r\n\r\n  saveFile = async (buffer) => {\r\n    const savefilepath = this.savefilepath.current;\r\n    const folder = `${savefilepath.state.folder || '.'}/`,\r\n      hasTime = savefilepath.state.hasTime,\r\n      format = savefilepath.state.format,\r\n      fileName = `${savefilepath.state.filename || Date.now().toString()}${!hasTime ? '' : (Date.now().toString())}.webm`;\r\n\r\n    await FileService.save(buffer, folder, fileName);\r\n    if(format !== 'webm'){\r\n      this.setState({isLoading: true});\r\n      ipcRenderer.send('win:convert-video', {folder, fileName, type: format});\r\n    }\r\n    console.log('save')\r\n  }\r\n\r\n  deleteRecording = async () => {\r\n    const {isRecording} = this.state;\r\n    if(isRecording){\r\n      await RecorderService.stop();\r\n      this.setState({isRecording: false, isPaused: false});\r\n      this.timeCounter.current.stop();\r\n      this.timeCounter.current.reset();\r\n      ipcRenderer.send('win:cancel');\r\n    }\r\n  }\r\n\r\n  cancelRecording = async () => {\r\n    this.pause();\r\n    const options = {\r\n      type: 'question',\r\n      buttons: ['No', 'Yes'],\r\n      defaultId: 2,\r\n      title: 'Question',\r\n      message: 'Do you want to delete the current recording?',\r\n      detail: 'it cannot be undone',\r\n    };\r\n    remote.dialog.showMessageBox(null, options, (response) => {\r\n      if(response === 1){ // Yes\r\n        this.deleteRecording();\r\n      }\r\n    })\r\n  }\r\n\r\n  controlButtons(){\r\n    const { isRecording, isPaused } = this.state;\r\n\r\n    if(isRecording && !isPaused){\r\n      return (\r\n        <>\r\n          <button className=\"record-control-button\" onClick={this.cancelRecording} ><i className=\"fas fa-trash-alt\" /><span>Delete</span></button>\r\n          <button className=\"record-control-button\" onClick={this.pause} ><i className=\"fas fa-pause\" /><span>Pause</span></button>\r\n          <button className=\"record-control-button\" onClick={this.stop} ><i className=\"fas fa-stop\" /><span>Stop</span></button>\r\n        </>\r\n      )\r\n    }else{\r\n      return (\r\n        <>\r\n          <button className=\"record-control-button\" onClick={this.cancelRecording} ><i className=\"fas fa-trash-alt\" /><span>Delete</span></button>\r\n          <button className=\"record-control-button\" onClick={this.resume} ><i className=\"fas fa-play\" /><span>Resume</span></button>\r\n          <button className=\"record-control-button\" onClick={this.stop} ><i className=\"fas fa-stop\" /><span>Stop</span></button>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { isRecording, canRecordSystemAudio, audioTarget, isLoading } = this.state;\r\n    let appClassName = 'App';\r\n    if(isRecording){\r\n      appClassName += ' is-recording';\r\n    }\r\n    return (\r\n      <div className={appClassName}>\r\n        <div className=\"app-container\" >\r\n          <video className=\"video-preview\" ref={this.video} />\r\n          <div className=\"audio-visualization-container\" >\r\n            <AudioVisualization height={50} width={100} audioDevice={audioTarget}  />\r\n          </div>\r\n\r\n          <div className=\"settings-control\">\r\n            <div className=\"settings-sources\" >\r\n              <VideoSourceList ref={this.videoSourceList} onSelect={this.onVideoSourceSelect} />\r\n              <AudioSourceList ref={this.audioSourceList} onSelect={this.onAudioSourceSelect} />\r\n              <label style={{'display': 'none'}} >\r\n                <input disabled type=\"checkbox\" checked={canRecordSystemAudio} onChange={this.onRecordSystemAudioChange} /> Record System Audio\r\n              </label>\r\n            </div>\r\n            <div className=\"record-control\" > \r\n              <button className=\"record-control-button\" onClick={this.start} ><i className=\"fas fa-circle\" /><span>Record</span></button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"recording-control\" >\r\n            <div className=\"time-counter-container\" >\r\n              <TimeCounter ref={this.timeCounter} isActive />\r\n            </div>\r\n            <div className=\"record-control\" >\r\n              {this.controlButtons()}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"save-file-container\" >\r\n              <SaveFilepath ref={this.savefilepath} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className={'loading-container' + (isLoading ? ' is-loading' : '')}>\r\n          <span>Wait . . .</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nexport const RecorderService = {\r\n    recorder: null,\r\n    blobs: [],\r\n    start(stream){\r\n        if(!RecorderService.recorder){\r\n            RecorderService.recorder = new MediaRecorder(stream);\r\n            RecorderService.blobs = [];\r\n\r\n            RecorderService.recorder.ondataavailable = function(event){\r\n                RecorderService.blobs.push(event.data);\r\n            }\r\n\r\n            RecorderService.recorder.start();\r\n        }\r\n    },\r\n    async stop(){\r\n        return new Promise((resolve) =>  {\r\n            if(RecorderService.recorder && RecorderService.recorder.state !== null){\r\n                RecorderService.recorder.onstop = function(){\r\n                    RecorderService.toArrayBuffer(new Blob(RecorderService.blobs, {type: 'video/webm'}), function(arrayBuffer){\r\n                        const buffer = RecorderService.toBuffer(arrayBuffer);\r\n                        resolve(buffer);\r\n                    })\r\n                    RecorderService.recorder = null;\r\n                }\r\n                RecorderService.recorder.stop();\r\n            }\r\n        })\r\n    },\r\n    pause(){\r\n        if(RecorderService.recorder && RecorderService.recorder.state === 'recording'){\r\n            RecorderService.recorder.pause();\r\n        }\r\n    },\r\n    resume(){\r\n        if(RecorderService.recorder && RecorderService.recorder.state === 'paused'){\r\n            RecorderService.recorder.resume();\r\n        }\r\n    },\r\n    toArrayBuffer(blob, callback){\r\n\t\tlet fileReader = new FileReader();\r\n\t\tfileReader.onload = function(){\r\n\t\t\tlet arrayBuffer = this.result;\r\n\t\t\tcallback(arrayBuffer);\r\n\t\t}\r\n\t\tfileReader.readAsArrayBuffer(blob);\r\n\t},\r\n\ttoBuffer(arrayBuffer){\r\n\t\tlet buffer = new Buffer(arrayBuffer.byteLength);\r\n\t\tlet arr = new Uint8Array(arrayBuffer)\r\n\t\tfor(let i = 0; i < arr.byteLength; i++){\r\n\t\t\tbuffer[i] = arr[i];\r\n\t\t}\r\n\t\treturn buffer;\r\n\t}\r\n};"],"sourceRoot":""}